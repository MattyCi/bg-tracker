package org.bgtrack.auth;import com.opensymphony.xwork2.ActionSupport;import org.apache.shiro.subject.Subject;import org.bgtrack.models.user.Reguser;import org.bgtrack.utils.BGTConstants;public class ShiroBaseAction extends ActionSupport {	private static final long serialVersionUID = 6529231995619283129L;		protected transient Subject shiroUser;	protected Reguser regUser;	protected boolean isValidationFailed = false;		@Override	public void validate() {				if (isAuthenticationRequired() && !isAuthenticated()) {						addActionError(BGTConstants.logInPromp);						setValidationFailed(true);					}			}		@Override	public String execute() throws Exception {					if(isValidationFailed) {			return BGTConstants.error;		}				return BGTConstants.success; 	}		public boolean isAuthenticated() {		return (this.shiroUser != null) && (this.shiroUser.isAuthenticated());	}	public Subject getShiroUser() {		return this.shiroUser;	}	public void setShiroUser(Subject shiroUser) {		this.shiroUser = shiroUser;	}		// used by the interceptor	public void setRegUser(Reguser regUser) {		this.regUser = regUser;	}		public Reguser getRegUser() {		return regUser;	}		public void setValidationFailed(boolean isValidationFailed) {		this.isValidationFailed = isValidationFailed;	}		public boolean isValidationFailed() {		return isValidationFailed;	}		public boolean isAuthenticationRequired() {		return false;	}	}